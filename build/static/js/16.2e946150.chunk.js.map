{"version":3,"sources":["redux/actions/UserActions.js","components/shared-components/AvatarStatus/index.js","views/app-views/clients/listclients/UserView.js","views/app-views/clients/listclients/index.js"],"names":["fetchUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","users","wrap","_context","prev","next","type","actionTypes","axios","get","sent","data","payload","t0","message","stop","_x","apply","arguments","deleteUser","userId","_ref2","_callee2","_context2","delete","concat","_x2","fetchUser","_ref3","_callee3","user","_context3","_x3","renderAvatar","props","_jsx","Avatar","_objectSpread","className","children","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","UserView","_Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","key","value","_this$props","this","visible","close","username","email","phone","address","website","company","Drawer","title","placement","closable","width","onClose","footer","style","textAlign","CloseOutlined","UserOutlined","Divider","PhoneOutlined","MailOutlined","EnvironmentOutlined","street","suite","city","zipcode","Component","UserList","_this","_len","length","args","Array","_key","call","state","selectedUser","showUserProfile","userInfo","setState","closeUserProfile","loading","error","Spin","tableColumns","dataIndex","render","_","record","img","sorter","compare","a","b","toLowerCase","elm","Tooltip","Link","to","Button","EyeOutlined","danger","DeleteOutlined","Card","bodyStyle","padding","Table","columns","dataSource","rowKey","mapDispatchToProps","withRouter","connect"],"mappings":"uPAMaA,EAAa,WACtB,sBAAAC,EAAAC,YAAAC,cAAAC,MAAO,SAAAC,EAAOC,GAAQ,IAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACkC,OAApDN,EAAS,CAAEO,KAAMC,MAAmCJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGzBG,IAAMC,IAAI,8CAA8C,KAAD,EAAxET,EAAQG,EAAAO,KACRT,EAAQD,EAASW,KACvBZ,EAAS,CAAEO,KAAMC,IAAiCK,QAASX,IAASE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEpEJ,EAAS,CAAEO,KAAMC,IAA+BK,QAAST,EAAAU,GAAMC,UAAW,yBAAAX,EAAAY,OAAA,GAAAjB,EAAA,kBAEjF,gBAAAkB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,EAVD,EAWJ,EAGaC,EAAa,SAACC,GACvB,sBAAAC,EAAA1B,YAAAC,cAAAC,MAAO,SAAAyB,EAAOvB,GAAQ,OAAAH,cAAAM,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACkC,OAApDN,EAAS,CAAEO,KAAMC,MAAmCgB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAG1CG,IAAMgB,OAAO,8CAADC,OAA+CL,IAAU,KAAD,EAC1ErB,EAAS,CAAEO,KAAMC,IAAiCK,QAASQ,IAAUG,EAAAlB,KAAA,gBAAAkB,EAAAnB,KAAA,EAAAmB,EAAAV,GAAAU,EAAA,SAErExB,EAAS,CAAEO,KAAMC,IAA+BK,QAASW,EAAAV,GAAMC,UAAW,yBAAAS,EAAAR,OAAA,GAAAO,EAAA,kBAEjF,gBAAAI,GAAA,OAAAL,EAAAJ,MAAA,KAAAC,UAAA,EATD,EAUJ,EAIaS,EAAY,SAACP,GACtB,sBAAAQ,EAAAjC,YAAAC,cAAAC,MAAO,SAAAgC,EAAO9B,GAAQ,IAAAC,EAAA8B,EAAA,OAAAlC,cAAAM,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OACiC,OAAnDN,EAAS,CAAEO,KAAMC,MAAkCwB,EAAA3B,KAAA,EAAA2B,EAAA1B,KAAA,EAGxBG,IAAMC,IAAI,8CAADgB,OAA+CL,IAAU,KAAD,EAAlFpB,EAAQ+B,EAAArB,KACRoB,EAAO9B,EAASW,KACtBZ,EAAS,CAAEO,KAAMC,IAAgCK,QAASkB,IAAQC,EAAA1B,KAAA,gBAAA0B,EAAA3B,KAAA,EAAA2B,EAAAlB,GAAAkB,EAAA,SAElEhC,EAAS,CAAEO,KAAMC,IAA8BK,QAASmB,EAAAlB,GAAMC,UAAW,yBAAAiB,EAAAhB,OAAA,GAAAc,EAAA,kBAEhF,gBAAAG,GAAA,OAAAJ,EAAAX,MAAA,KAAAC,UAAA,EAVD,EAWJ,C,2LC5CMe,EAAe,SAAAC,GACpB,OAAOC,cAACC,IAAMC,wBAAA,GAAKH,GAAK,IAAEI,UAAS,cAAAb,OAAgBS,EAAM5B,MAAOiC,SAAEL,EAAMM,OACzE,EA+BeC,EA7Ba,SAAAP,GAC3B,IAAQQ,EAAqFR,EAArFQ,KAAMC,EAA+ET,EAA/ES,OAAQC,EAAuEV,EAAvEU,SAAUC,EAA6DX,EAA7DW,GAAIvC,EAAyD4B,EAAzD5B,KAAMwC,EAAmDZ,EAAnDY,IAAKC,EAA8Cb,EAA9Ca,KAAMC,EAAwCd,EAAxCc,KAAMC,EAAkCf,EAAlCe,MAAOC,EAA2BhB,EAA3BgB,IAAKV,EAAsBN,EAAtBM,KAAMW,EAAgBjB,EAAhBiB,YAC7E,OACCC,eAAA,OAAKd,UAAU,0CAAyCC,SAAA,CACtDN,EAAa,CAACc,OAAMD,MAAKxC,OAAM0C,OAAMC,QAAOC,MAAKV,SAClDY,eAAA,OAAKd,UAAU,OAAMC,SAAA,CACpBa,eAAA,OAAAb,SAAA,CAEEY,EACAhB,cAAA,OAAKkB,QAAS,kBAAMF,EAAY,CAACT,OAAME,WAAUE,MAAKD,MAAI,EAAEP,UAAU,+BAA8BC,SAAEG,IAEtGP,cAAA,OAAKG,UAAU,qBAAoBC,SAAEG,IAEtCP,cAAA,QAAAI,SAAOI,OAERR,cAAA,OAAKG,UAAU,oCAAmCC,SAAEK,SAIxD,E,wECvBMU,EAAQ,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAxC,MAAA,KAAAC,UAAA,CA4DT,OA5DS0C,YAAAN,EAAA,EAAAO,IAAA,SAAAC,MACV,WACI,IAAAC,EAAiCC,KAAK9B,MAA9BvB,EAAIoD,EAAJpD,KAAMsD,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAEvB,IAAKvD,IAASsD,EACV,OAAO,KAGX,IAAQvB,EAA4D/B,EAA5D+B,KAAMyB,EAAsDxD,EAAtDwD,SAAUC,EAA4CzD,EAA5CyD,MAAOC,EAAqC1D,EAArC0D,MAAOC,EAA8B3D,EAA9B2D,QAASC,EAAqB5D,EAArB4D,QAASC,EAAY7D,EAAZ6D,QAExD,OACIpB,eAACqB,IAAM,CACHC,MAAOhC,EACPiC,UAAU,QACVC,UAAU,EACVX,QAASA,EACTY,MAAO,IACPC,QAASZ,EACTa,OACI5C,cAAA,OAAK6C,MAAO,CAAEC,UAAW,SAAU1C,SAC/BJ,cAAC+C,IAAa,CAAC7B,QAASa,MAE/B3B,SAAA,CAEDa,eAAA,OAAKd,UAAU,cAAaC,SAAA,CACxBJ,cAACC,IAAM,CAACY,KAAM,GAAID,KAAMZ,cAACgD,IAAY,MACrChD,cAAA,MAAIG,UAAU,OAAMC,SAAE4B,IACtBhC,cAAA,KAAAI,SAAI6B,OAERjC,cAACiD,IAAO,IACRhC,eAAA,OAAKd,UAAU,OAAMC,SAAA,CACjBa,eAAA,MAAAb,SAAA,CACIJ,cAACkD,IAAa,IAAG,YAErBlD,cAAA,KAAAI,SAAI8B,OAERjB,eAAA,OAAKd,UAAU,OAAMC,SAAA,CACjBa,eAAA,MAAAb,SAAA,CACIJ,cAACmD,IAAY,IAAG,YAEpBnD,cAAA,KAAAI,SAAI6B,OAERhB,eAAA,OAAKd,UAAU,OAAMC,SAAA,CACjBa,eAAA,MAAAb,SAAA,CACIJ,cAACoD,IAAmB,IAAG,cAE3BnC,eAAA,KAAAb,SAAA,CACK+B,EAAQkB,OAAO,KAAGlB,EAAQmB,MAAM,KAAGnB,EAAQoB,KAAK,KAAGpB,EAAQqB,cAGpEvC,eAAA,OAAKd,UAAU,OAAMC,SAAA,CACjBJ,cAAA,MAAAI,SAAI,YACJJ,cAAA,KAAAI,SAAIgC,OAERnB,eAAA,OAAKd,UAAU,OAAMC,SAAA,CACjBJ,cAAA,MAAAI,SAAI,YACJJ,cAAA,KAAAI,SAAIiC,EAAQ9B,YAI5B,KAACY,CAAA,CA5DS,CAASsC,aA+DRtC,I,QCvDTuC,EAAQ,SAAAtC,GAAAC,YAAAqC,EAAAtC,GAAA,IAAAE,EAAAC,YAAAmC,GAAA,SAAAA,IAAA,IAAAC,EAAAnC,YAAA,KAAAkC,GAAA,QAAAE,EAAA7E,UAAA8E,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjF,UAAAiF,GAeR,OAfQL,EAAArC,EAAA2C,KAAAnF,MAAAwC,EAAA,OAAAhC,OAAAwE,KACVI,MAAQ,CACJC,aAAc,MACjBR,EAMDS,gBAAkB,SAACC,GACfV,EAAKW,SAAS,CAAEH,aAAcE,GAClC,EAACV,EAEDY,iBAAmB,WACfZ,EAAKW,SAAS,CAAEH,aAAc,MAClC,EAACR,CAAC,CA2FD,OA3FAlC,YAAAiC,EAAA,EAAAhC,IAAA,oBAAAC,MAVD,WACIE,KAAK9B,MAAMzC,YACf,GAAC,CAAAoE,IAAA,SAAAC,MAUD,WACI,IAAAC,EAA8CC,KAAK9B,MAA3CjC,EAAK8D,EAAL9D,MAAO0G,EAAO5C,EAAP4C,QAASC,EAAK7C,EAAL6C,MAAOzF,EAAU4C,EAAV5C,WACvBmF,EAAiBtC,KAAKqC,MAAtBC,aAER,GAAIK,EACA,OAAMxE,cAAA,OAAKG,UAAU,cAAaC,SAC9BJ,cAAC0E,IAAI,CAAC7D,KAAK,YAInB,GAAI4D,EACA,OAAOxD,eAAA,OAAAb,SAAA,CAAK,UAAQqE,KAGxB,IAAME,EAAe,CACjB,CACIpC,MAAO,OACPqC,UAAW,OACXC,OAAQ,SAACC,EAAGC,GAAM,OACd/E,cAAA,OAAKG,UAAU,SAAQC,SACnBJ,cAACM,EAAY,CAACK,IAAKoE,EAAOC,IAAKzE,KAAMwE,EAAOxE,KAAME,SAAUsE,EAAO9C,SACjE,EAEVgD,OAAQ,CACJC,QAAS,SAACC,EAAGC,GAGT,OAFAD,EAAIA,EAAE5E,KAAK8E,gBACXD,EAAIA,EAAE7E,KAAK8E,gBACK,EAAID,EAAID,EAAI,EAAI,CACpC,IAGR,CACI5C,MAAO,WACPqC,UAAW,YAEf,CACIrC,MAAO,QACPqC,UAAW,SAEf,CACIrC,MAAO,QACPqC,UAAW,SAEf,CACIrC,MAAO,UACPqC,UAAW,WAEf,CACIrC,MAAO,GACPqC,UAAW,UACXC,OAAQ,SAACC,EAAGQ,GAAG,OACXrE,eAAA,OAAKd,UAAU,aAAYC,SAAA,CACvBa,eAACsE,IAAO,CAAChD,MAAM,OAAMnC,SAAA,CAEbJ,cAACwF,IAAI,CAACC,GAAE,6BAAAnG,OAA+BgG,EAAI5E,IAAKN,SAC5CJ,cAAC0F,IAAM,CACHvH,KAAK,UACLgC,UAAU,OACVS,KAAMZ,cAAC2F,IAAW,IAClB9E,KAAK,YAEN,QAKfb,cAACuF,IAAO,CAAChD,MAAM,SAAQnC,SACnBJ,cAAC0F,IAAM,CACHE,QAAM,EACNhF,KAAMZ,cAAC6F,IAAc,IACrB3E,QAAS,kBAAMlC,EAAWsG,EAAI5E,GAAG,EACjCG,KAAK,cAGX,IAKlB,OACII,eAAC6E,IAAI,CAACC,UAAW,CAAEC,QAAS,OAAQ5F,SAAA,CAChCJ,cAACiG,IAAK,CAACC,QAASvB,EAAcwB,WAAYrI,EAAOsI,OAAO,OACxDpG,cAACmB,EAAQ,CACL3C,KAAM2F,EACNrC,QAA0B,OAAjBqC,EACTpC,MAAOF,KAAK0C,qBAI5B,KAACb,CAAA,CA1GS,CAASD,aAmHjB4C,EAAqB,CACvB/I,eACA0B,gBAGWsH,sBAAWC,aAXF,SAACrC,GAAK,MAAM,CAChCpG,MAAOoG,EAAMpG,MAAMA,MACnB0G,QAASN,EAAMpG,MAAM0G,QACrBC,MAAOP,EAAMpG,MAAM2G,MACtB,GAOkD4B,EAAzBE,CAA6C7C,G","file":"static/js/16.2e946150.chunk.js","sourcesContent":["\r\n\r\nimport * as actionTypes from '../constants/Users';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const fetchUsers = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.FETCH_USERS_REQUEST });\r\n\r\n        try {\r\n            const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            const users = response.data;\r\n            dispatch({ type: actionTypes.FETCH_USERS_SUCCESS, payload: users });\r\n        } catch (error) {\r\n            dispatch({ type: actionTypes.FETCH_USERS_ERROR, payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const deleteUser = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.DELETE_USER_REQUEST });\r\n\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${userId}`);\r\n            dispatch({ type: actionTypes.DELETE_USER_SUCCESS, payload: userId });\r\n        } catch (error) {\r\n            dispatch({ type: actionTypes.DELETE_USER_ERROR, payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const fetchUser = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: actionTypes.FETCH_USER_REQUEST });\r\n\r\n        try {\r\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${userId}`);\r\n            const user = response.data;\r\n            dispatch({ type: actionTypes.FETCH_USER_SUCCESS, payload: user });\r\n        } catch (error) {\r\n            dispatch({ type: actionTypes.FETCH_USER_ERROR, payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component } from 'react';\r\nimport { Avatar, Drawer, Divider } from 'antd';\r\nimport { UserOutlined, PhoneOutlined, MailOutlined, EnvironmentOutlined, CloseOutlined } from '@ant-design/icons';\r\n\r\nclass UserView extends Component {\r\n    render() {\r\n        const { data, visible, close } = this.props;\r\n\r\n        if (!data || !visible) {\r\n            return null;\r\n        }\r\n\r\n        const { name, username, email, phone, address, website, company } = data;\r\n\r\n        return (\r\n            <Drawer\r\n                title={name}\r\n                placement=\"right\"\r\n                closable={false}\r\n                visible={visible}\r\n                width={300}\r\n                onClose={close}\r\n                footer={\r\n                    <div style={{ textAlign: 'right' }}>\r\n                        <CloseOutlined onClick={close} />\r\n                    </div>\r\n                }\r\n            >\r\n                <div className=\"text-center\">\r\n                    <Avatar size={80} icon={<UserOutlined />} />\r\n                    <h4 className=\"mt-2\">{username}</h4>\r\n                    <p>{email}</p>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"mt-2\">\r\n                    <h5>\r\n                        <PhoneOutlined /> Phone\r\n                    </h5>\r\n                    <p>{phone}</p>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    <h5>\r\n                        <MailOutlined /> Email\r\n                    </h5>\r\n                    <p>{email}</p>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    <h5>\r\n                        <EnvironmentOutlined /> Address\r\n                    </h5>\r\n                    <p>\r\n                        {address.street}, {address.suite}, {address.city}, {address.zipcode}\r\n                    </p>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    <h5>Website</h5>\r\n                    <p>{website}</p>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    <h5>Company</h5>\r\n                    <p>{company.name}</p>\r\n                </div>\r\n            </Drawer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserView;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Card, Table, Tooltip, Button, Spin} from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { withRouter} from 'react-router-dom';\r\n\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { fetchUsers, deleteUser } from 'redux/actions/UserActions';\r\nimport UserView from './UserView';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass UserList extends Component {\r\n    state = {\r\n        selectedUser: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUsers();\r\n    }\r\n\r\n    showUserProfile = (userInfo) => {\r\n        this.setState({ selectedUser: userInfo });\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({ selectedUser: null });\r\n    };\r\n\r\n    render() {\r\n        const { users, loading, error, deleteUser } = this.props;\r\n        const { selectedUser } = this.state;\r\n\r\n        if (loading) {\r\n            return<div className=\"text-center\">\r\n                <Spin size=\"large\" />\r\n            </div>;\r\n        }\r\n\r\n        if (error) {\r\n            return <div>Error: {error}</div>;\r\n        }\r\n\r\n        const tableColumns = [\r\n            {\r\n                title: 'User',\r\n                dataIndex: 'name',\r\n                render: (_, record) => (\r\n                    <div className=\"d-flex\">\r\n                        <AvatarStatus src={record.img} name={record.name} subTitle={record.email} />\r\n                    </div>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.name.toLowerCase();\r\n                        b = b.name.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'Username',\r\n                dataIndex: 'username',\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: 'Phone',\r\n                dataIndex: 'phone',\r\n            },\r\n            {\r\n                title: 'Website',\r\n                dataIndex: 'website',\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'actions',\r\n                render: (_, elm) => (\r\n                    <div className=\"text-right\">\r\n                        <Tooltip title=\"View\">\r\n\r\n                                <Link to={`/app/clients/edit-profile/${elm.id}`}>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        className=\"mr-2\"\r\n                                        icon={<EyeOutlined />}\r\n                                        size=\"small\"\r\n                                    />\r\n                                </Link>\r\n\r\n\r\n                            />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                            <Button\r\n                                danger\r\n                                icon={<DeleteOutlined />}\r\n                                onClick={() => deleteUser(elm.id)}\r\n                                size=\"small\"\r\n                            />\r\n                        </Tooltip>\r\n                    </div>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <Card bodyStyle={{ padding: '0px' }}>\r\n                <Table columns={tableColumns} dataSource={users} rowKey=\"id\" />\r\n                <UserView\r\n                    data={selectedUser}\r\n                    visible={selectedUser !== null}\r\n                    close={this.closeUserProfile}\r\n                />\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    loading: state.users.loading,\r\n    error: state.users.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchUsers,\r\n    deleteUser,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserList));\r\n"],"sourceRoot":""}